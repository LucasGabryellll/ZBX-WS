generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id Int @id @default(autoincrement())

  chat_id   String @unique @db.VarChar(255)
  chat_name String @db.VarChar()
  server    String @db.Char(4)
  is_active Boolean @default(true)
  
  report Report[]

  @@index([id], map: "idx_chat_id")
  @@map("chats")
}

model User {
  id Int @id @default(autoincrement())

  name      String  @db.VarChar(120)
  email     String  @unique @db.VarChar(255)
  login     String  @unique @db.VarChar(255)
  password  String  @db.VarChar(255)
  is_active Boolean @default(true)

  passwordResetToken   String?   @default("")
  passwordResetExpires DateTime?

  report Report[]

  @@index([id], name: "idx_user_id")
  @@index([email], name: "idx_user_email")
  @@index([login], name: "idx_user_login")
  @@map("users")
}

model Session {
  id Int @id @default(autoincrement())

  session    String  @db.VarChar()
  qr         String  @db.VarChar()
  is_connect Boolean @default(false)

  @@index([id], name: "idx_session_id")
  @@map("sessions")
}

model Report {
  id Int @id @default(autoincrement())

  data DateTime @default(now())

  is_active Boolean @default(true)

  arquive_name   String? @db.VarChar()
  arquive_locate String? @db.VarChar()

  chat_id Int
  Chat    Chat @relation(fields: [chat_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  user_id Int
  User    User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([id], name: "idx_report_id")
  @@map("reports")
}

model Command {
  id Int @id @default(autoincrement())

  description String @db.VarChar(255)
  command     String @unique @db.VarChar(20)

  @@index([id], name: "idx_command_id")
  @@map("commands")
}
